name: Create Release

on:
  workflow_dispatch:
    inputs:
      release-description:
        description: 'Release Description'
        required: true

jobs:
#  ci:
#    uses: ./.github/workflows/ci.yml

  create_release:
    runs-on: ubuntu-latest
#    needs: ci

    permissions:
      packages: write  # Permet de pousser des packages
      contents: read

    outputs:
      version: ${{ steps.extract_project_version.outputs.version }}

    steps:
      # https://github.com/actions/checkout
      - name: Init Checkout
        uses: actions/checkout@v4

      # https://github.com/actions/setup-java
      - name: set up java 21 and maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                          http://maven.apache.org/xsd/settings-1.0.0.xsd">
                    <servers>
                        <server>
                            <id>github</id>
                            <username>${{ github.actor }}</username>
                            <password>${{ secrets.GITHUB_TOKEN }}</password>
                        </server>
                    </servers>
                </settings>' > ~/.m2/settings.xml

      - name: Create a package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn clean deploy -DskipTests

#      - name: Fetch Project Version
#        id: extract_project_version
#        run: |
#          version=$(grep -m 1 '<version>' pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')
#          echo "$version"
#          echo "version=$version" >> $GITHUB_OUTPUT

      # https://github.com/actions/create-release
#      - name: Create Release On Github
#        id: create_release
#        uses: softprops/action-gh-release@v2
#        with:
#          name: Release ${{ steps.extract_project_version.outputs.version }}
#          tag_name: ${{ steps.extract_project_version.outputs.version }}
#          body: ${{ inputs.release-description }}
#          token: ${{ secrets.GITHUB_TOKEN }}
