name: Deploy on stage

on:
  workflow_dispatch:
    inputs:
      version-tag:
        description: 'Version you want to deploy'
        required: true

jobs:
  build_image_and_deploy_image_on_docker_hub:
    runs-on: ubuntu-latest

    env:
      REPOSITORY: ${{ secrets.DOCKER_HUB_REGISTRY }}/poc-pipelines

    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version-tag }}

      - name: Configure application.properties stage configuration
        run: echo "${{ secrets.PROPERTIES_STAGE_CONFIG }}" > ./src/main/resources/application.properties

      - name: Set .env
        run: echo "${{ secrets.RENDER_ENV_CONFIG }}" > .env

      # https://github.com/docker/login-action
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # https://github.com/docker/build-push-action
      - name: Push Docker image with release version
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: .
          push: true
          tags: ${{ env.REPOSITORY }}:stage-${{ inputs.version-tag }}

      # https://github.com/docker/build-push-action
      - name: Push Docker image with release version
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: .
          push: true
          tags: ${{ env.REPOSITORY }}:stage-latest

#  deploy_on_stage:
#    needs: build_image_and_deploy_image_on_docker_hub
#    runs-on: ubuntu-latest
#
#    env:
#      deploy_url: ${{ secrets.RENDER_DEPLOY_STAGE_HOOK_URL }}
#
#      steps:
#        - name: deploy on render
#          run: curl "$deploy_url"
